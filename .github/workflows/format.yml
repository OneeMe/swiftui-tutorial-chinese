# This is a basic workflow to help you get started with Actions

name: Reorder-on-Merge

# Controls when the workflow will run
on:
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Check PR Status
        run: |
          if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
            echo "This PR isn't merged, so the action is quited."
            exit 0
          fi

      # Runs a set of commands using the runners shell
      - name: Download the SwiftGGFormatter Tool
        run: |
          curl -s https://api.github.com/repos/SwiftGGTeam/SwiftGGFormatter/releases/latest | grep browser_download_url | cut -d '"' -f 4 | wget -qi -
          unzip SwiftGGFormatter.zip
      
      - name: Fetch PR Info
        id: pr_info
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: files } = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            const ymlFiles = files.filter(file => file.filename.endsWith('.yml')).map(file => file.filename);
            return ymlFiles;
      
      - name: Gain Changed Files in the current PR
        run: |
          changedFiles=${{ steps.pr_info.outputs.result }}
          
      - name: Reorder
        run: |
          for file in $changedFiles; do
            echo "Reorder: $file"
            ./SwiftGGFormatter "$file"
          done
          
      - name: Push to the Repo
        run: |
          git config user.name "underthestars-zhy"
          git config user.email "zhuhaoyu0909@icloud.com"
          git add .
          git commit -m "Actions: Apply formatting changes"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      
